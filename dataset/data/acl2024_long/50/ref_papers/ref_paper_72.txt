{
    "id": "5888f7aba5c601a668c290bf57addf79cc1518f1",
    "title": "ChatUniTest: a ChatGPT-based automated unit test generation tool",
    "abstract": "\u2014Unit testing is a crucial, yet often tedious and time-consuming task. To relieve developers from this burden, automated unit test generation techniques are developed. Existing automated unit test generation tools, such as program-analysis-based tools like EvoSuite and Randoop, lack program comprehension, resulting in unit tests with poor readability and limited assertions. Language-model-based tools, such as AthenaTest and A3Test, have limitations in the generation of correct unit tests. In this paper, we introduce ChatUniTest, a ChatGPT-based automated unit test generation tool developed under the Generation-Validation-Repair framework. ChatUniTest generates tests by parsing the project, extracting essential information, and creating an adaptive focal context that includes the focal method and its dependencies within the pre-de\ufb01ned maximum prompt token limit. The context is incorporated into a prompt and subsequently submitted to ChatGPT. Once ChatGPT\u2019s response is received, ChatUniTest proceeds to extract the raw test from the response. It then validates the test and employs Rule-based Repair to \ufb01x syntactic and simple compile errors, followed by ChatGPT-based Repair to address challenging errors. Our rigorous evaluation demonstrates that ChatUniTest outperforms EvoSuite in branch and line coverage, surpasses AthenaTest and A3Test in focal method coverage, and e\ufb00ectively generates assertions while utilizing mock objects and re\ufb02ection to achieve test objectives."
}