{
    "id": "ae51155c7a2e1dd80c74acff81ac627045aa172e",
    "title": "Cs 6604: Data Mining 2 Relational Apriori 2.1 Queries",
    "abstract": "1 Overview In the previous several lectures, we mainly discussed algorithms for ILP, i.e., supervised learning of rela-tional predicates. In this class, we focus on unsupervised algorithms for learning relational patterns. In particular, we look at algorithms that are the relational equivalent of traditional enumerative search algorithms. Take, for instance, the most famous algorithm in the association rules literature, i.e., Apriori. Its relational twin, call it Relational Apriori, is its generalization to first-order logic. To recall the details of Apriori, one of the properties it exploits is anti-monotonicity, namely if a set of items X does not have support, a set Y \u2287 X cannot have support. Suppose we have a relational database consisting of three tables, i.e., \" Customer \" , \" Parent \" , and \" Buys \" as follows: Customer ID allen bill carol diana Parent ID Child ID allen bill allen carol bill zoe carol diana Customer ID Item allen wine bill candy bill pizza diana pizza Table 1: Relation database RD with customer information The type of pattern we try to mine can be viewed as queries. We say that a query-pattern matches the database if the set of tuples returned by the query is not empty. Take an ordinary SQL query for example, if we need to inquire the relational database for the customer who buys its child \" candy \" : Let us convert this query into predicate logic form. Thus, the above SQL query is translated into the following logical clause form, Q 1 ."
}